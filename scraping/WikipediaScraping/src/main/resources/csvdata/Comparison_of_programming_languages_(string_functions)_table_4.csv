"Format","Languages"
"IFstring1<string2THEN-1ELSEABS(string1>string2)FI","ALGOL68"
"cmp(string1,string2)","Python2"
"(string1>string2)-(string1<string2)","Python"
"strcmp(string1,string2)","C,PHP"
"std.string.cmp(string1,string2)","D"
"StrComp(string1,string2)","VB,ObjectPascal(Delphi)"
"string1cmpstring2","Perl,Raku"
"string1compare:string2","Smalltalk(Squeak,Pharo)"
"string1<=>string2","Ruby,C++(STL,C++20)"
"string1.compare(string2)","C++(STL),Swift(Foundation)"
"compare(string1,string2)","Rexx,Seed7"
"CompareStr(string1,string2)","Pascal,ObjectPascal(Delphi)"
"string1.compareTo(string2)","Cobra,Java"
"string1.CompareTo(string2)","VB.NET,C#,F#"
"(comparestring1string2)","Clojure"
"(string=string1string2)","CommonLisp"
"(string-comparestring1string2p<p=p>)","Scheme(SRFI13)"
"(string=string1string2)","ISLISP"
"comparestring1string2","OCaml"
"String.compare(string1,string2)","StandardML"
"comparestring1string2","Haskell"
"[string]::Compare(string1,string2)","WindowsPowerShell"
"[string1compare:string2]","Objective-C(NSString*only)"
"LLT(string1,string2)LLE(string1,string2)LGT(string1,string2)LGE(string1,string2)","Fortran"
"string1.localeCompare(string2)","JavaScript"
"bytes.Compare([]byte(string1),[]byte(string2))","Go"
"stringcompare?-nocase??-lengthint?string1string2","Tcl"
"compare(string1,string2,count)","PL/I"
"string1.cmp(string2)","Rust"
