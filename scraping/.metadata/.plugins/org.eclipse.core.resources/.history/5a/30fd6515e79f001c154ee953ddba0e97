package wikipediaScraping;

import static org.junit.Assert.*;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.junit.Test;

//import wikipediaScraping.WikipediaHTMLExtractor;

public class TestWikipediaHTMLExtractor {

	@Test
	public void testIsNumeric() {
		
		WikipediaHTMLExtractor testa = new WikipediaHTMLExtractor("lf","ldf");
		
		assertEquals(true, testa.isNumeric("4"));
	}
	
	@Test
	public void testHtmlParser_null() throws IOException {
		
		WikipediaHTMLExtractor wikiExtractor = new WikipediaHTMLExtractor("https://en.wikipedia.org/wiki/","Comparison_of_World_War_I_tank");
		wikiExtractor.htmlParser();
		assertNull(wikiExtractor.getTables());
	}
	
	@Test
	public void testHtmlParser_notnull() throws IOException {
		
		WikipediaHTMLExtractor wikiExtractor = new WikipediaHTMLExtractor("https://en.wikipedia.org/wiki/","Comparison_of_DOS_operating_systems");
		wikiExtractor.htmlParser();
		assertNotNull(wikiExtractor.getTables());
	}
	
	
	@Test
	public void testScraper_number_table() throws IOException{

		WikipediaHTMLExtractor scrap = new WikipediaHTMLExtractor("https://en.wikipedia.org/wiki/","Comparison_of_programming_languages_(syntax)");
		/*int number_of_table = scrap.Scraper(true);	
		System.out.println(number_of_table);
		assertEquals(4, number_of_table);*/	
	}
	
	
	@Test
	public void testScraper() throws IOException{
		
		List<String> lien = new ArrayList<String>();
		lien.add("Comparison_of_DOS_operating_systems");
		lien.add("Comparison_of_programming_languages_(syntax)");
		lien.add("Comparison_of_domestic_robots");
		lien.add("Comparison_of_HP_graphing_calculators");  //with image in cell
		lien.add("Comparison_of_World_War_I_tank");     //unavailable page
		
		for(int i=0 ; i<lien.size(); i++) {
			WikipediaHTMLExtractor scrap = new WikipediaHTMLExtractor("https://en.wikipedia.org/wiki/",lien.get(i));
			//int total_table = scrap.Scraper(true);
		}
		
	}

}


//https://mkyong.com/maven/how-to-run-unit-test-with-maven/