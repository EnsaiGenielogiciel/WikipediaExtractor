"Format","Languages"
"std.string.join(array_of_strings,separator)","D"
"string:join(list_of_strings,separator)","Erlang"
"join(separator,list_of_strings)","Perl,PHP,Raku"
"implode(separator,array_of_strings)","PHP"
"separator.join(sequence_of_strings)","Python,Swift1.x"
"array_of_strings.join(separator)","Ruby,JavaScript,Raku,Rust"
"(string-joinarray_of_stringsseparator)","Scheme(SRFI13)"
"(formatnil""~{~a~^separator~}""array_of_strings)","CommonLisp"
"(clojure.string/joinseparatorlist_of_strings)(applystr(interposeseparatorlist_of_strings))","Clojure"
"strings.Join(array_of_strings,separator)","Go"
"join(array_of_strings,separator)","Seed7"
"String.concatseparatorlist_of_strings","OCaml"
"String.concatWithseparatorlist_of_strings","StandardML"
"Data.List.intercalateseparatorlist_of_strings","Haskell(GHC6.8+)"
"Join(array_of_strings,separator)","VB"
"String.Join(separator,array_of_strings)","VB.NET,C#,F#"
"String.join(separator,array_of_strings)","Java8+"
"&{$OFS=$separator;""$array_of_strings""},orarray_of_strings-joinseparator","WindowsPowerShell"
"[array_of_stringscomponentsJoinedByString:separator]","Objective-C(NSString*only)"
"table.concat(table_of_strings,separator)","Lua"
"{|StringstreamContents:[:stream|collectionOfAnythingasStringOn:streamdelimiter:separator]collectionOfAnythingjoinUsing:separator","Smalltalk(Squeak,Pharo)"
"array_of_strings.join(separator«,final_separator»)","Cobra"
"sequence_of_strings.joinWithSeparator(separator)","Swift2.x"
"1??separator,¨list_of_strings","APL"
