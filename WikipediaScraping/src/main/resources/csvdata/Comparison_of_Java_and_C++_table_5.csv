"C++Templates","JavaGenerics"
"Classes,functions,aliasesandvariablescanbetemplated.","Classesandmethodscanbegenericized."
"Parameterscanbevariadic,ofanytype,integralvalue,characterliteral,oraclasstemplate.","Parameterscanbeanyreferencetype,includingboxedprimitivetypes(i.e.Integer,Boolean...)."
"Separateinstantiationsoftheclassorfunctionwillbegeneratedforeachparameter-setwhencompiled.Forclasstemplates,onlythememberfunctionsthatareusedwillbeinstantiated.","Oneversionoftheclassorfunctioniscompiled,worksforalltypeparameters(viatype-erasure)."
"Objectsofaclasstemplateinstantiatedwithdifferentparameterswillhavedifferenttypesatruntime(i.e.,distincttemplateinstantiationsaredistinctclasses).","Typeparametersareerasedwhencompiled;objectsofaclasswithdifferenttypeparametersarethesametypeatruntime.Itcausesadifferentconstructor.Becauseofthistypeerasure,itisnotpossibletooverloadmethodsusingdifferentinstantiationsofthegenericclass."
"Implementationoftheclassorfunctiontemplatemustbevisiblewithinatranslationunitinordertouseit.Thisusuallyimplieshavingthedefinitionsintheheaderfilesorincludedintheheaderfile.AsofC++11,itispossibletouseexterntemplatestoseparatecompilingofsomeinstantiations.","Signatureoftheclassorfunctionfromacompiledclassfileissufficienttouseit."
"Templatescanbespecializedâ€”aseparateimplementationcouldbeprovidedforaparticulartemplateparameter.","Genericscannotbespecialized."
"Templateparameterscanhavedefaultarguments.Pre-C++11,thiswasallowedonlyfortemplateclasses,notfunctions.","Generictypeparameterscannothavedefaultarguments."
"Wildcardsunsupported.Instead,returntypesareoftenavailableasnestedtypedefs.(Also,C++11addedkeywordauto,whichactsasawildcardforanytypethatcanbedeterminedatcompiletime.)","Wildcardssupportedastypeparameter."
"Nodirectsupportforboundingoftypeparameters,butmetaprogrammingprovidesthis","Supportsboundingoftypeparameterswith""extends""and""super""forupperandlowerbounds,respectively;allowsenforcementofrelationshipsbetweentypeparameters."
"Allowsinstantiationofanobjectwiththetypeoftheparametertype.","Precludesinstantiationofanobjectwiththetypeoftheparametertype(exceptviareflection)."
"Typeparameterofclasstemplatecanbeusedforstaticmethodsandvariables.","Typeparameterofgenericclasscannotbeusedforstaticmethodsandvariables."
"Staticvariablesunsharedbetweenclassesandfunctionsofdifferenttypeparameters.","Staticvariablessharedbetweeninstancesofclassesofdifferenttypeparameters."
"Classandfunctiontemplatesdonotenforcetyperelationsfortypeparametersintheirdeclaration.Useofanincorrecttypeparameterresultsincompilingfailure,oftengeneratinganerrormessagewithinthetemplatecoderatherthanintheuser'scodethatinvokesit.Properuseoftemplatedclassesandfunctionsisdependentonproperdocumentation.Metaprogrammingprovidesthesefeaturesatthecostofaddedeffort.TherewasapropositiontosolvethisprobleminC++11,so-calledConcepts,itisplannedforthenextstandard.","Genericclassesandfunctionscanenforcetyperelationshipsfortypeparametersintheirdeclaration.Useofanincorrecttypeparameterresultsinatypeerrorwithinthecodethatusesit.Operationsonparametrizedtypesingenericcodeareonlyallowedinwaysthatcanbeguaranteedtobesafebythedeclaration.Thisresultsingreatertypesafetyatthecostofflexibility."
"TemplatesareTuring-complete(seetemplatemetaprogramming).","GenericsarealsoTuring-complete"
