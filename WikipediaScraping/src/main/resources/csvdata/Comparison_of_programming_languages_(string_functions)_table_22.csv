"Format","Languages"
"string(string'First..string'First+n-1)","Ada"
"substr(string,0,n)","AWK(changesstring),Perl,PHP,Raku"
"LEFT$(string,n)","BASIC,VB"
"left(string,n)","VB,FreeBASIC,Ingres,PickBasic"
"strncpy(string2,string,n)","Cstandardlibrary"
"string.substr(0,n)","C++(STL),Raku"
"[stringsubstringToIndex:n]","Objective-C(NSString*only)"
"(applystr(takenstring))","Clojure"
"string[0..n]","D"
"string:substr(string,start,length)","Erlang"
"(subseqstring0n)","CommonLisp"
"string[:n]","Cobra,Go,Python"
"left(string,n«,padchar»)","Rexx,Erlang"
"string[0,n]string[0..n-1]","Ruby"
"string[1,n]","PickBasic"
"string[..n]","Seed7"
"string.Substring(0,n)","VB.NET,C#,WindowsPowerShell,F#"
"leftstr(string,n)","Pascal,ObjectPascal(Delphi)"
"copy(string,1,n)","TurboPascal"
"string.substring(0,n)","Java,JavaScript"
"(string-takestringn)","Scheme(SRFI13)"
"takenstring","Haskell"
"String.extract(string,n,NONE)","StandardML"
"String.substring0n","OCaml"
"string.[..n]","F#"
"string.sub(string,1,n)(string):sub(1,n)","Lua"
"stringfirst:n","Smalltalk(Squeak,Pharo)"
"string(:n)","Fortran"
"StringTake[string,n]","Mathematica"
"string(«FUNCTION»LENGTH(string)-n:n)","COBOL"
"string.substring(0,n)","Cobra"
"n↑string.","APL"
"string[0..n]string[..n]string.get(0..n)string.get(..n)","Rust"
